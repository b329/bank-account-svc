version: "3.9"

services:
  mongodb:
    container_name: mongodb
    image: mongo:5.0
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    networks:
      - bank_api_network

  postgres:
    container_name: postgres
    image: postgres:14.2
    environment:
      POSTGRES_USER: ${PSQL_DB_USER}
      POSTGRES_PASSWORD: ${PSQL_DB_PASS}
      POSTGRES_DB: ${PSQL_DB_NAME}
    ports:
      - 5432:5432
    volumes: 
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bank_api_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 10s
      retries: 5

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    restart: always
    ports:
      - 2181:2181
    volumes:
      - ./zookeeper/bitnami/zookeeper:/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - bank_api_network

  kafka-0:
    image: docker.io/bitnami/kafka:2.8.1
    hostname: kafka-0
    restart: on-failure
    ports:
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=0
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-0:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
    volumes:
      - ./kafka_0/bitnami/kafka:/bitnami/kafka
      - ./kafka_0/logs:/opt/bitnami/kafka/logs
    depends_on:
      - zookeeper
    networks:
      - bank_api_network

  kafka-1:
    image: docker.io/bitnami/kafka:2.8.1
    hostname: kafka-1
    restart: on-failure
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-1:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
    volumes:
      - ./kafka_1/bitnami/kafka:/bitnami/kafka
      - ./kafka_1/logs:/opt/bitnami/kafka/logs
    depends_on:
      - zookeeper
    networks:
      - bank_api_network

  kafka-2:
    image: docker.io/bitnami/kafka:2.8.1
    hostname: kafka-2
    restart: on-failure
    ports:
      - "9095:9095"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=2
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-2:9092,EXTERNAL://localhost:9095
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
    volumes:
      - ./kafka_2/bitnami/kafka:/bitnami/kafka
      - ./kafka_2/logs:/opt/bitnami/kafka/logs
    depends_on:
      - zookeeper
    networks:
      - bank_api_network

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  bank_api_network:
    name: bank_api_network
    driver: bridge
